//Підключення шрифту
@mixin font($font_name, $file_name, $weight, $style) {
    @font-face {
        font-family: $font_name;
        font-display: swap;
        src: url("../fonts/#{$file_name}.woff2") format("woff2"),
        url("../fonts/#{$file_name}.woff") format("woff");
        font-weight: #{$weight};
        font-style: #{$style};
    }
}

//Percent
@function percent($px, $from) {
    $result: math.div($px, $from) * 100%;
    @return $result;
}

//REM
@function rem($px) {
    $result: math.div($px, 16) + rem;
    @return $result;
}

//EM
@function em($px, $current: 16) {
    $result: math.div($px, $current) + em;
    @return $result;
}

//Currency
@mixin currency($sym) {
    &::after {
        content: "#{$sym}";
    }
}

// Grids
@mixin gridCards($type: fit, $min: 280px, $max: 1fr, $gap: 30px) {
    display: grid;
    gap: $gap;
    grid-template-columns: repeat(auto-#{$type}, minmax($min, $max));
}

// Адаптивна властивість (clamp)
@mixin adaptiveValue($property, $startSize, $minSize, $keepSize: 0, $widthFrom: $containerWidth, $widthTo: $minWidth) {
    @if ($startSize==0) {
        $startSize: 0.000001;
    }

    @if ($minSize==0) {
        $minSize: 0.000001;
    }

    // Для calc();
    $addSize: math.div($startSize - $minSize, 16);

    @if ($widthFrom==$containerWidth and $maxWidthContainer==0) {
        $widthFrom: $maxWidth;
    }

    // Брейк-поїнти в EM
    $widthFromMedia: em($widthFrom);
    $widthToMedia: em($widthTo);

    // Формула плаваючого значення
    // Источник: https://css-tricks.com/linearly-scale-font-size-with-css-clamp-based-on-the-viewport/
    $slope: math.div(($startSize - $minSize), ($widthFrom - $widthTo));
    $yIntersection: -$widthTo * $slope+$minSize;

    @if ($yIntersection==0) {
        $yIntersection: 0.000001;
    }

    $flyValue: #{rem($yIntersection)}" + "#{$slope * 100}vw;

    // Отримання значення властивості
    $propertyValue: #{"clamp(" rem($minSize) "," $flyValue "," rem($startSize) ")"};

    // Якщо негативні значення
    @if ($minSize > $startSize) {
        $propertyValue: #{"clamp(" rem($startSize) "," $flyValue "," rem($minSize) ")"};
    }

    // Встановлюємо значення за замовчуванням
    @if $keepSize !=1 and $keepSize !=3 {
        @media (min-width: $widthFromMedia) {
            #{$property}: rem($startSize);
        }
    }

    // Адаптуємо розмір у проміжку між зазначеними ширинами в'юпорту
    @media (min-width: $widthToMedia) and (max-width: $widthFromMedia) {

        // Якщо підтримується clamp();
        @supports (#{$property}: $propertyValue) {
            #{$property}: $propertyValue;
        }

        // Якщо не підтримується clamp();
        @supports not (#{$property}: $propertyValue) {
            #{$property}: calc(#{rem($minSize)} + #{$addSize} * (100vw - #{rem($widthTo)}) / #{math.div($widthFrom, 16) - math.div($widthTo, 16)});
        }
    }

    @if $keepSize !=1 and $keepSize !=2 {
        @media (max-width: $widthToMedia) {
            #{$property}: rem($minSize);
        }
    }
}

@mixin mobile-menues() {
    .menu__body {
        z-index: 4;
        position: fixed;
        top: 0;
        left: -100%;
        width: 100%;
        height: 100%;
        display: flex;
        flex-direction: column;
        align-items: center;
        overflow: auto;
        padding-top: rem(25);
        transition: left 0.3s ease 0s;
        background: linear-gradient(180deg, #110DFC 4.69%, #110DFC 39.88%, rgba(250, 255, 2, 0.18) 60.12%, rgba(241, 243, 117, 0.50) 99.62%, rgba(248, 253, 31, 0.03) 99.97%, rgba(133, 134, 66, 0.00) 99.98%);
        background: $blueColor;

        &._active {
            left: 0;
        }

        .logo {
            width: rem(200);
            
            img {
            }
        }
        
        h2 {
            margin-top: rem(20);
            text-align: center;
            font-size: rem(40);
            font-weight: 700;
            margin-bottom: rem(30);
            color: $yellowColor;
        }

        footer {
            span {
                background: none;
            }

            svg {
                path {
                    fill: $yellowColor;
                }
            }

            color: $goldColor;
        }

        .menu__list {
            display: grid;
            grid-template-columns: auto;
            gap: rem(20);
            margin-bottom: rem(50);
            align-self: center;
            padding: 0 10%;

            &>li {
                a {
                    margin-bottom: rem(10);
                }
            }

            .sub-menu {
                display: none;
                left: 10%;
                background-color: $goldColor;
                box-shadow: 0 8px 16px rgba(0, 0, 0, 0.1);
                color: $blueColor;
                max-height: 0;
                /* Устанавливаем максимальную высоту основного меню */
                transition: all 0.1s ease-in-out;
                /* Добавляем CSS-транзицию */
                padding-left: 5%;
                margin-top: 2%;
                transform: translateX(10%);
                max-width: 90%;
                border-radius: 20px;
                font-size: rem(25);

                li {
                    list-style: disc;
                }
            }

            &>li.active {
                .sub-menu {
                    display: block;
                    // max-height: 100%;
                    overflow: hidden;
                    transition: all 1s ease-in-out;
                }
            }
        }

        .menu__item {
            position: relative;

            .menu__link {
                font-size: rem(32);
                color: #fff;
                text-shadow: 2.783px 4.175px 5.566px rgba(255, 221, 1, 0.75);
            }


        }
    }
}